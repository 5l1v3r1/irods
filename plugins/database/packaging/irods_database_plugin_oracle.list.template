# =-=-=-=-=-=-=-
# EPM Variables
# =-=-=-=-=-=-=-
%product iRODS Oracle Database Plugin
%copyright 2014-2015, The University of North Carolina at Chapel Hill
%vendor Renaissance Computing Institute <info@irods.org>
%license LICENSE
%readme README
%description The integrated Rule-Oriented Data System
%version TEMPLATE_PLUGINVERSION TEMPLATE_PLUGINVERSIONINT


%requires irods-icat


# =-=-=-=-=-=-=-
# Required Packages for specific systems
# and
# Setting environment variables for EPM
# =-=-=-=-=-=-=-

%if DEB
%requires unixodbc

%elseif REDHATRPM
$REDHAT=true
$RPM=true
%requires unixODBC

%elseif SUSERPM
$SUSE=true
$RPM=true
%requires unixODBC

%endif

%if CENTOS6
%requires unixODBC
%requires unixODBC-devel
%endif

%if DEB
%requires libc6
%endif

# =-=-=-=-=-=-=-
# Required Packages for all systems
# (have a common name across packaging universes)
# =-=-=-=-=-=-=-
%if ARCH
%else
%requires perl
%endif

%format all

# =-=-=-=-=-=-=-
# Install variables
# =-=-=-=-=-=-=-
$IRODS_HOME_DIR=/var/lib/irods
$IRODS_HOME=$IRODS_HOME_DIR/iRODS

# =-=-=-=-=-=-=-
# preinstall
# =-=-=-=-=-=-=-
%preinstall << END_PREINSTALL

# determine whether this is an upgrade
if [ "$$1" -eq "$$1" ] 2>/dev/null ; then
  # integer, therefore rpm
  if [ $$1 -gt 1 ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
else
  # string, therefore deb
  if [ "$$1" = "upgrade" ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
fi

if [ "$$PACKAGEUPGRADE" = "true" ] ; then
  # write version information down for postinstall
  UPGRADE_FLAG_FILE="$IRODS_HOME_DIR/packaging/upgrade_db.tmp"
  touch $$UPGRADE_FLAG_FILE
else
  echo "NOP" > /dev/null
fi

END_PREINSTALL

# =-=-=-=-=-=-=-
# post install
# =-=-=-=-=-=-=-
%postinstall << END_POSTINSTALL
# =-=-=-=-=-=-=-
# detect whether this is an upgrade
UPGRADE_FLAG_FILE=$IRODS_HOME_DIR/packaging/upgrade_db.tmp
if [ -f "$$UPGRADE_FLAG_FILE" ] ; then
    UPGRADE_FLAG="true"
else
    UPGRADE_FLAG="false"
fi
if [ "$$UPGRADE_FLAG" = "false" ] ; then
    echo ""
    echo "======================================================================="
    echo ""
    echo "iRODS Oracle Database Plugin installation was successful."
    echo ""
    echo "To configure this plugin, the following prerequisites need to be met:"
    echo " - an existing database user (to be used by the iRODS server)"
    echo " - an existing database (to be used as the iCAT catalog)"
    echo " - permissions for existing user on existing database"
    echo ""
    echo "And run the following setup script:"
    echo "  sudo /var/lib/irods/scripts/setup_irods.py"
    echo ""
    echo "======================================================================="
    echo ""
fi
rm -f $$UPGRADE_FLAG_FILE
END_POSTINSTALL

# =-=-=-=-=-=-=-
# preremove
# =-=-=-=-=-=-=-
# N/A

# =-=-=-=-=-=-=-
# post remove
# =-=-=-=-=-=-=-
%postremove << END_POSTREMOVE

# determine whether this is an upgrade
if [ "$$1" -eq "$$1" ] 2>/dev/null ; then
  # integer, therefore rpm
  if [ $$1 -gt 0 ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
else
  # string, therefore deb
  if [ "$$1" = "upgrade" ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
fi

if [ "$$PACKAGEUPGRADE" = "true" ] ; then
   echo "NOP" > /dev/null
else
   echo "NOP" > /dev/null
fi

END_POSTREMOVE







# =-=-=-=-=-=-=-
# Full File Listing
# =-=-=-=-=-=-=-
f 755 root root ${IRODS_HOME_DIR}/plugins/database/liboracle.so ./liboracle.so
f 755 root root ${IRODS_HOME_DIR}/packaging/setup_irods_database.sh ./packaging/setup_irods_database.sh
f 644 root root ${IRODS_HOME_DIR}/packaging/upgrade-3.3.xto4.0.0.sql ./oracle/upgrade-3.3.xto4.0.0.sql
f 644 root root ${IRODS_HOME_DIR}/tests/remote_setup_oracle.input ./packaging/remote_setup_oracle.input
f 755 root root ${IRODS_HOME_DIR}/packaging/find_odbc_oracle.sh ./packaging/find_odbc_oracle.sh
f 755 root root ${IRODS_HOME_DIR}/packaging/find_bin_oracle.sh ./packaging/find_bin_oracle.sh

f 644 root root ${IRODS_HOME}/server/icat/src/icatSysTables.sql ./src/icatSysTables.sql
f 644 root root ${IRODS_HOME}/server/icat/src/icatDropSysTables.sql ./src/icatDropSysTables.sql
f 644 root root ${IRODS_HOME}/server/icat/src/icatSysInserts.sql ./src/icatSysInserts.sql
f 644 root root ${IRODS_HOME}/server/icat/src/icatPurgeRecycleBin.sql ./src/icatPurgeRecycleBin.sql
f 755 root root ${IRODS_HOME}/server/icat/src/convertSql.pl ./src/convertSql.pl

f 755 root root ${IRODS_HOME}/server/test/bin/test_cll ./test_cll
f 755 root root ${IRODS_HOME}/server/test/bin/test_genu ./test_genu
f 755 root root ${IRODS_HOME}/server/test/bin/test_genq ./test_genq

d 755 root root ${IRODS_HOME_DIR}/packaging/schema_updates -
f 644 root root ${IRODS_HOME_DIR}/packaging/schema_updates/2.oracle.sql ./packaging/schema_updates/2.postgres.mysql.oracle.sql
f 644 root root ${IRODS_HOME_DIR}/packaging/schema_updates/3.oracle.sql ./packaging/schema_updates/3.postgres.mysql.oracle.sql
f 644 root root ${IRODS_HOME_DIR}/packaging/schema_updates/4.oracle.sql ./packaging/schema_updates/4.postgres.oracle.sql
f 644 root root ${IRODS_HOME_DIR}/packaging/schema_updates/5.oracle.sql ./packaging/schema_updates/5.oracle.sql

