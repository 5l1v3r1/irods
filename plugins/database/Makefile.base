#From caller
IRODSDIR = ../$(IRODSTOPDIR)
SODIR = ../$(SOTOPDIR)

FULLTARGET = $(SODIR)/$(TARGET)

OBJS = $(patsubst %.cpp, $(OBJDIR)/%.o, $(SRCS))

include $(IRODSDIR)/config/platform.mk
include $(IRODSDIR)/config/config.mk
include $(IRODSDIR)/../packaging/irods_externals_locations.mk

LIBRARY=$(IRODSDIR)/lib/core/obj/libRodsAPIs.a
LIB_CLIENT_EXEC=$(IRODSDIR)/lib/client_exec/obj/irods_client_rule_execution_manager_factory.o
CHL_OBJS=\
	     $(IRODSDIR)/server/core/obj/irods_database_factory.o \
   	 	 $(IRODSDIR)/server/core/obj/irods_database_manager.o \
   	 	 $(IRODSDIR)/server/core/obj/irods_database_object.o  \
   	 	 $(IRODSDIR)/server/core/obj/irods_postgres_object.o  \
   	 	 $(IRODSDIR)/server/core/obj/irods_mysql_object.o     \
   	 	 $(IRODSDIR)/server/core/obj/irods_oracle_object.o    \
         $(IRODSDIR)/server/core/obj/readServerConfig.o       \
         $(IRODSDIR)/lib/core/obj/irods_server_properties.o

DB_PLUGIN_SRC = $(IRODSDIR)/server/core/src/irods_database_plugin.cpp
DB_PLUGIN_OBJ_WITH_NO_RE = $(OBJDIR)/irods_database_plugin_with_no_re.o 

ICAT_HLR_SRC = $(IRODSDIR)/server/icat/src/icatHighLevelRoutines.cpp
ICAT_HLR_OBJ_WITH_NO_RE = $(IRODSDIR)/server/core/obj/icatHighLevelRoutines_with_no_re.o

GCC = $(CC) -Wno-write-strings -DRODS_SERVER

INC = -I$(IRODSDIR)/lib/core/include/ \
	  -I$(IRODSDIR)/lib/api/include/ \
	  -I$(IRODSDIR)/lib/hasher/include \
      -I$(IRODSDIR)/server/core/include/ \
	  -I$(IRODSDIR)/server/icat/include/ \
	  -I$(IRODSDIR)/server/re/include/ \
      -I$(IRODSDIR)/server/drivers/include/ \
      -I/usr/include/openssl \
	  -I$(IRODSDIR)/../plugins/database/include

EXTERNALINC = -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/include \
          -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/include \
          -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/include
INC += $(EXTERNALINC)

EXTERNALLIBS = -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/lib \
             -lboost_system \
             -lboost_filesystem \
             -lboost_regex \
             -lboost_thread \
             -lboost_chrono \
             -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/lib \
             -larchive \
             -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/lib \
             -ljansson \
             -L/usr/lib/ -lz -lbz2

RPATH = "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/lib" \
        "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/lib" \
        "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/lib"

LDFLAGS += -lz $(RPATH)

ifeq ($(OS_platform), osx_platform)
LDADD += "-Wl,-undefined,dynamic_lookup"
else
LDADD += "-Wl,-E"
endif

ifneq ($(OS_platform), osx_platform)
LDFLAGS += -lrt
endif

ifeq ($(IRODS_BUILD_COVERAGE), 1)
GCC += -fprofile-arcs -ftest-coverage -lgcov
endif

.PHONY: clean

EXTRALIBS += ../../../iRODS/server/re/obj/irods_operation_rule_execution_manager.o

EXTRA_LDRFLAGS += $(EXTERNALLIBS) $(RPATH)

default: tests $(FULLTARGET)

tests: $(SODIR)/test_cll $(SODIR)/test_genq $(SODIR)/test_genu

clean:
	@-rm -f $(FULLTARGET) > /dev/null 2>&1
	@-rm -f $(OBJS) > /dev/null 2>&1
	@-rm -f *.o > /dev/null 2>&1
	@rm -f $(SODIR)/test_cll $(SODIR)/test_cml $(SODIR)/test_genq $(SODIR)/test_genu

$(FULLTARGET): $(OBJS)
	@echo "Building Database Plugins"
	@-mkdir -p $(SODIR) > /dev/null 2>&1
	$(V_at)$(GCC) $(INC) -D$(OS_platform) $(CFLAGS) $(LDRFLAGS) -fPIC $(LDADD)  -shared -o $(FULLTARGET) $(OBJS) $(EXTRALIBS) $(EXTRA_LDRFLAGS) $(DBMS_LIB)

$(OBJDIR)/%.o: ../src/%.cpp
	$(V_at)$(GCC) $(INC) $(EXTRA_CFLAGS) -D$(OS_platform) -fPIC -c -g -o $@ $<

$(ICAT_HLR_OBJ_WITH_NO_RE): $(DB_PLUGIN_SRC)
	$(CC) -DLINK_NO_OP_RE_MGR $(CFLAGS) $(INC) -c $(ICAT_HLR_SRC) -o $(ICAT_HLR_OBJ_WITH_NO_RE)

$(DB_PLUGIN_OBJ_WITH_NO_RE): $(DB_PLUGIN_SRC)
	@echo "Compile Without RE `basename $@`..."
	$(V_at)$(CC) -DLINK_NO_OP_RE_MGR $(INC) $(EXTRA_CFLAGS) -c $(DB_PLUGIN_SRC) -o $(DB_PLUGIN_OBJ_WITH_NO_RE)

$(SODIR)/test_cll: $(OBJDIR)/test_cll.o $(CLL_OBJS) $(LIBRARY)
	@echo "Link server test `basename $@`..."
	$(V_at)$(LDR) -o $@ $^ $(LIBRARY) $(LIB_CLIENT_EXEC) $(LDFLAGS) $(DBMS_LIB) $(LDRFLAGS) $(EXTRA_LDRFLAGS) -fPIC -rdynamic -ldl -lpthread -lssl -lcrypto

$(SODIR)/test_genq: $(OBJDIR)/test_genq.o  $(ICAT_HLR_OBJ_WITH_NO_RE) $(DB_PLUGIN_OBJ_WITH_NO_RE) $(CLL_OBJS) $(GENQ_OBJS) $(CHL_OBJS) $(LIBRARY)
	@echo "Link server test `basename $@`..."
	$(V_at)$(LDR) -o $@ $^ $(LIBRARY) $(LIB_CLIENT_EXEC) $(LDFLAGS) $(DBMS_LIB) $(LDRFLAGS) $(EXTRA_LDRFLAGS) -fPIC -rdynamic -ldl -lpthread -lssl -lcrypto

$(SODIR)/test_genu: $(OBJDIR)/test_genu.o $(GENU_OBJS) $(CHL_OBJS) $(CLL_OBJS) $(ICAT_HLR_OBJ_WITH_NO_RE) $(DB_PLUGIN_OBJ_WITH_NO_RE) $(LIBRARY)
	@echo "Link server test `basename $@`..."
	$(V_at)$(LDR) -o $@ $^ $(LIBRARY) $(LIB_CLIENT_EXEC) $(LDFLAGS) $(DBMS_LIB) $(LDRFLAGS) $(EXTRA_LDRFLAGS) -fPIC -rdynamic -ldl -lpthread -lssl -lcrypto
