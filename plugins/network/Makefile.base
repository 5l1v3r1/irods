#From caller
IRODSDIR = ../$(IRODSTOPDIR)
SODIR = ../$(SOTOPDIR)

FULLTARGET = $(SODIR)/$(TARGET)

OBJS = $(patsubst %.cpp, $(OBJDIR)/%.o, $(SRCS))

include $(IRODSDIR)/config/config.mk
include $(IRODSDIR)/config/platform.mk
include $(IRODSDIR)/../packaging/irods_externals_locations.mk

GCC = $(CC) -DRODS_SERVER -DZIP_EXEC_PATH=\"$(ZIP_EXEC_PATH)\" -DUNZIP_EXEC_PATH=\"$(UNZIP_EXEC_PATH)\"
GCC += `../../../packaging/compiler_check.sh 4 2`

JANSSON_INCLUDES = -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/include 
BOOST_INCLUDES = -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/include
INC = -I$(IRODSDIR)/lib/core/include/ \
	  -I$(IRODSDIR)/lib/api/include/ \
	  -I$(IRODSDIR)/lib/hasher/include \
      -I$(IRODSDIR)/server/core/include/ \
	  -I$(IRODSDIR)/server/icat/include/ \
	  -I$(IRODSDIR)/server/re/include/ \
      -I$(IRODSDIR)/server/drivers/include/ \
      -I/usr/include/openssl \
	  $(JANSSON_INCLUDES) \
	  $(BOOST_INCLUDES)

EXTERNALINC = -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/include \
          -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/include \
          -I$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/include
INC += $(EXTERNALINC)

EXTRNALLIBS = -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/lib \
             -lboost_system \
             -lboost_filesystem \
             -lboost_regex \
             -lboost_thread \
             -lboost_chrono \
             -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/lib \
             -larchive \
             -L$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/lib \
             -ljansson \
             -L/usr/lib/ -lz -lbz2

RPATH = "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_BOOST)/lib" \
        "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_JANSSON)/lib" \
        "-Wl,-rpath,$(IRODS_EXTERNALS_ROOT)/$(BUILD_SUBDIRECTORY_ARCHIVE)/lib"

MY_CFLAG += $(INC)

ifeq ($(OS_platform), osx_platform)
LDADD += "-Wl,-undefined,dynamic_lookup"
else
LDADD += "-Wl,-E"
endif


ifeq ($(IRODS_BUILD_COVERAGE), 1)
GCC += -fprofile-arcs -ftest-coverage -lgcov
OBJS = $(patsubst %.cpp, %.o, $(SRCS))
%.o: %.cpp
	$(GCC) $(MY_CFLAG) -D$(OS_platform) -fPIC -c -g -o $@ $<
endif

.PHONY: clean

default: $(FULLTARGET)

clean:
	@-rm -f $(FULLTARGET) > /dev/null 2>&1
	@-rm -f $(OBJS) > /dev/null 2>&1
	@-rm -f *.o > /dev/null 2>&1

$(FULLTARGET): $(OBJS)
	@echo "Building Network Plugins"
	@-mkdir -p $(SODIR) > /dev/null 2>&1
	$(V_at)$(GCC) $(LDRFLAGS) -D$(OS_platform) -fPIC $(LDADD) -shared -o $(FULLTARGET) $(OBJS) $(EXTERNALLIBS) $(RPATH) $(EXTRALIBS)

$(OBJDIR)/%.o: %.cpp
	$(V_at)$(GCC) $(MY_CFLAG) -D$(OS_platform) -fPIC -c -g -o $@ $<
